---
delete:
  description: "Deletes multiple records in an app.\n"
  operationId: "deleteRecordsForGuestSpace"
  parameters:
  - description: "guest space id"
    in: "path"
    name: "guestSpaceId"
    required: true
    schema:
      description: "guest space id"
      title: "guestSpaceId"
      type: "integer"
  - description: "The app ID.\n"
    in: "query"
    name: "app"
    required: true
    schema:
      description: "The app ID.\n"
      format: "long"
      type: "integer"
  - description: "Array of record IDs that will be deleted.\nUp to 100 records can\
      \ be specified.\n"
    in: "query"
    name: "ids"
    required: true
    schema:
      description: "Array of record IDs that will be deleted.\nUp to 100 records can\
        \ be specified.\n"
      items:
        format: "long"
        type: "integer"
      type: "array"
  - description: "The Expected revision number.\nThe first id number will correspond\
      \ to the first revision number in the array, the second id to the second revision\
      \ number, and so on.\nIf the revision number does not match, an error will occur\
      \ and no records will be deleted.\nIf the revision number is left blank or is\
      \ -1, the revision number will not be checked for the corresponding record ID.\n"
    in: "query"
    name: "revisions"
    required: false
    schema:
      description: "The Expected revision number.\nThe first id number will correspond\
        \ to the first revision number in the array, the second id to the second revision\
        \ number, and so on.\nIf the revision number does not match, an error will\
        \ occur and no records will be deleted.\nIf the revision number is left blank\
        \ or is -1, the revision number will not be checked for the corresponding\
        \ record ID.\n"
      items:
        format: "long"
        type: "integer"
      type: "array"
  responses:
    "200":
      description: "success case of records/delete"
      content:
        application/json:
          schema: {}
  tags:
  - "RECORD"
get:
  description: "Retrieves details of multiple records from an App by specifying the\
    \ App ID and a query string.\n"
  operationId: "getRecordsForGuestSpace"
  parameters:
  - description: "guest space id"
    in: "path"
    name: "guestSpaceId"
    required: true
    schema:
      description: "guest space id"
      title: "guestSpaceId"
      type: "integer"
  - description: "The App ID.\n"
    in: "query"
    name: "app"
    required: true
    schema:
      description: "The App ID.\n"
      format: "long"
      type: "integer"
  - description: "The query string that specifies what records to include in the response.\n\
      Ignoring this parameter will return all accessible records from the App.\n"
    in: "query"
    name: "query"
    required: false
    schema:
      description: "The query string that specifies what records to include in the\
        \ response.\nIgnoring this parameter will return all accessible records from\
        \ the App.\n"
      format: "query"
      type: "string"
  - description: "The field codes to be included in the response.\nIgnoring this parameter\
      \ will return all accessible fields that exist in the App.\n"
    in: "query"
    name: "fields"
    required: false
    schema:
      description: "The field codes to be included in the response.\nIgnoring this\
        \ parameter will return all accessible fields that exist in the App.\n"
      items:
        type: "string"
      type: "array"
  - description: "If set to true, the total count of records that match the query\
      \ conditions will be included in the response.\nIf ignored, null is returned\
      \ for the totalCount value.\n"
    in: "query"
    name: "totalCount"
    required: false
    schema:
      description: "If set to true, the total count of records that match the query\
        \ conditions will be included in the response.\nIf ignored, null is returned\
        \ for the totalCount value.\n"
      format: "boolean"
      type: "boolean"
  responses:
    "200":
      description: "success case of records/get"
      content:
        application/json:
          schema:
            properties:
              records:
                description: "An array of objects, including field types and field\
                  \ values within the matching records.\n"
                items:
                  additionalProperties:
                    anyOf:
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetCalcSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetCategorySimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetDateSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetDatetimeSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetDecimalSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetEditorSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetFileSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetGroupSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetLinkSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetModifiedAtSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetModifierSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetMultipleLineTextSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetMultipleSelectSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetRecordIdSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetReferenceTableSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetSimpleTableValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetSingleLineTextSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetSingleSelectSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetStatusSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetTimeSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetUserSelectSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetOrganizationSelectSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetGroupSelectSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetRevisionSimpleValue"
                    - $ref: "../openapi.yaml#/components/schemas/RecordsGetRawRecordIdSimpleValue"
                  type: "object"
                type: "array"
              totalCount:
                description: "The total count of records that match the query conditions.\n\
                  If the totalCount parameter is ignored or is set as `false` in the\
                  \ request, `null` is returned.\n"
                format: "long"
                type: "integer"
            title: "getRecordsForGuestSpaceResponse"
            type: "object"
  tags:
  - "RECORDS"
put:
  description: "Updates details of multiple records in an App, by specifying their\
    \ record numbers, or their unique keys.\nIf the upsert parameter is set to true,\
    \ it also adds new records to the App.\n"
  operationId: "putRecordsForGuestSpace"
  parameters:
  - description: "guest space id"
    in: "path"
    name: "guestSpaceId"
    required: true
    schema:
      description: "guest space id"
      title: "guestSpaceId"
      type: "integer"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          properties:
            app:
              description: "The App ID.\n"
              format: "long"
              type: "integer"
            records:
              description: "Holds an array of objects that include id/updateKey, revision\
                \ and record objects.\n"
              items:
                $ref: "../openapi.yaml#/components/schemas/RecordsPutRecordForm"
              type: "array"
            upsert:
              description: "A mode where adding and updating records can be processed\
                \ at the same time.\n"
              format: "boolean"
              type: "boolean"
          required:
          - "app"
          - "records"
          title: "putRecordsForGuestSpaceRequest"
          type: "object"
  responses:
    "200":
      description: "success case of records/put"
      content:
        application/json:
          schema:
            properties:
              records:
                oneOf:
                - type: "array"
                  items:
                    $ref: "../openapi.yaml#/components/schemas/RecordsPutRecordBean"
                - type: "array"
                  items:
                    $ref: "../openapi.yaml#/components/schemas/RecordsPutUpsertRecordBean"
            title: "putRecordsForGuestSpaceResponse"
            type: "object"
  tags:
  - "RECORD"
post:
  description: "Adds multiple records to an App.\n"
  operationId: "postRecordsForGuestSpace"
  parameters:
  - description: "guest space id"
    in: "path"
    name: "guestSpaceId"
    required: true
    schema:
      description: "guest space id"
      title: "guestSpaceId"
      type: "integer"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          properties:
            app:
              description: "The App ID.\n"
              format: "long"
              type: "integer"
            records:
              description: "Holds an array of record objects, that contains field\
                \ codes and their values.\n\nFields that are not included in the objects\
                \ are added with their default value.\nObjects containing field codes\
                \ that do not exist are ignored.\n"
              items:
                additionalProperties:
                  anyOf:
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostCalcSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostCategorySimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostDateSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostDatetimeSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostDecimalSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostEditorSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostFileSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostGroupSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostLinkSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostModifiedAtSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostModifierSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostMultipleLineTextSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostMultipleSelectSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostRecordIdSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostReferenceTableSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostSimpleTableValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostSingleLineTextSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostSingleSelectSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostStatusSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostTimeSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostUserSelectSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostOrganizationSelectSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostGroupSelectSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostRevisionSimpleValue"
                  - $ref: "../openapi.yaml#/components/schemas/RecordsPostRawRecordIdSimpleValue"
                type: "object"
              type: "array"
          required:
          - "app"
          - "records"
          title: "postRecordsForGuestSpaceRequest"
          type: "object"
  responses:
    "200":
      description: "success case of records/post"
      content:
        application/json:
          schema:
            properties:
              ids:
                description: "The Record IDs of the created records.\n"
                items:
                  format: "long"
                  type: "integer"
                type: "array"
              revisions:
                description: "The revision numbers of the records.\n"
                items:
                  format: "long"
                  type: "integer"
                type: "array"
            title: "postRecordsForGuestSpaceResponse"
            type: "object"
  tags:
  - "RECORD"

